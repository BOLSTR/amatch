var search_data = {"index":{"searchIndex":["amatch","hamming","jaro","jarowinkler","levenshtein","longestsubsequence","longestsubstring","pairdistance","sellers","stringmethods","string","deletion()","deletion=()","hamming_similar()","ignore_case()","ignore_case()","ignore_case=()","ignore_case=()","insertion()","insertion=()","jaro_similar()","jarowinkler_similar()","levenshtein_similar()","longest_subsequence_similar()","longest_substring_similar()","match()","match()","match()","match()","match()","match()","match()","match()","new()","new()","new()","new()","new()","new()","new()","new()","pair_distance_similar()","pattern()","pattern()","pattern()","pattern()","pattern()","pattern()","pattern()","pattern()","pattern=()","pattern=()","pattern=()","pattern=()","pattern=()","pattern=()","pattern=()","pattern=()","reset_weights()","scaling_factor()","scaling_factor=()","search()","search()","similar()","similar()","similar()","similar()","similar()","similar()","similar()","similar()","substitution()","substitution=()","readme.rdoc","amatch_ext.c","pair.c","amatch.rb","polite.rb","rude.rb","version.rb"],"longSearchIndex":["ext/amatch_ext.c","amatch","amatch","amatch","amatch","amatch","amatch","amatch","amatch","amatch","lib/amatch/rude.rb","amatch::sellers","amatch::sellers","amatch::stringmethods","amatch::jaro","amatch::jarowinkler","amatch::jaro","amatch::jarowinkler","amatch::sellers","amatch::sellers","amatch::stringmethods","amatch::stringmethods","amatch::stringmethods","amatch::stringmethods","amatch::stringmethods","amatch::hamming","amatch::jaro","amatch::jarowinkler","amatch::levenshtein","amatch::longestsubsequence","amatch::longestsubstring","amatch::pairdistance","amatch::sellers","amatch::hamming","amatch::jaro","amatch::jarowinkler","amatch::levenshtein","amatch::longestsubsequence","amatch::longestsubstring","amatch::pairdistance","amatch::sellers","amatch::stringmethods","amatch::hamming","amatch::jaro","amatch::jarowinkler","amatch::levenshtein","amatch::longestsubsequence","amatch::longestsubstring","amatch::pairdistance","amatch::sellers","amatch::hamming","amatch::jaro","amatch::jarowinkler","amatch::levenshtein","amatch::longestsubsequence","amatch::longestsubstring","amatch::pairdistance","amatch::sellers","amatch::sellers","amatch::jarowinkler","amatch::jarowinkler","amatch::levenshtein","amatch::sellers","amatch::hamming","amatch::jaro","amatch::jarowinkler","amatch::levenshtein","amatch::longestsubsequence","amatch::longestsubstring","amatch::pairdistance","amatch::sellers","amatch::sellers","amatch::sellers","files/readme_rdoc.html","files/ext/amatch_ext_c.html","files/ext/pair_c.html","files/lib/amatch_rb.html","files/lib/amatch/polite_rb.html","files/lib/amatch/rude_rb.html","files/lib/amatch/version_rb.html"],"info":[["Amatch","lib/amatch/polite.rb","classes/Amatch.html"," < ","      This is the namespace module that includes all other classes, modules, and    constants.    ",1],["Hamming","Amatch","classes/Amatch/Hamming.html"," < Object","       This class computes the Hamming distance between two strings.        The Hamming distance between",1],["Jaro","Amatch","classes/Amatch/Jaro.html"," < Object","      This class computes the Jaro metric for two strings.    The Jaro metric computes the similarity",1],["JaroWinkler","Amatch","classes/Amatch/JaroWinkler.html"," < Object","      This class computes the Jaro-Winkler metric for two strings.    The Jaro-Winkler metric computes",1],["Levenshtein","Amatch","classes/Amatch/Levenshtein.html"," < Object","        The Levenshtein edit distance is defined as the minimal costs involved to     transform one string",1],["LongestSubsequence","Amatch","classes/Amatch/LongestSubsequence.html"," < Object","       This class computes the length of the longest subsequence common to two     strings. A subsequence",1],["LongestSubstring","Amatch","classes/Amatch/LongestSubstring.html"," < Object","      The longest common substring is the longest substring, that is part of    two strings. A substring",1],["PairDistance","Amatch","classes/Amatch/PairDistance.html"," < Object","      The pair distance between two strings is based on the number of adjacent    character pairs, that",1],["Sellers","Amatch","classes/Amatch/Sellers.html"," < Object","      The Sellers edit distance is very similar to the Levenshtein edit distance.    The difference is,",1],["StringMethods","Amatch","classes/Amatch/StringMethods.html"," < ","   This module can be mixed into ::String or its subclasses to mixin the similary methods directly. ",1],["String","lib/amatch/rude.rb","classes/String.html"," < Object","",1],["deletion","Amatch::Sellers","classes/Amatch/Sellers.html#M000012","()","          Returns the weight of the deletion operation, that is used to compute    the Sellers distance.",2],["deletion=","Amatch::Sellers","classes/Amatch/Sellers.html#M000013","(p1)","          Sets the weight of the deletion operation, that is used to compute    the Sellers distance,",2],["hamming_similar","Amatch::StringMethods","classes/Amatch/StringMethods.html#M000025","(p1)","          If called on a String, this string is used as a Amatch::Hamming#pattern to    match against",2],["ignore_case","Amatch::Jaro","classes/Amatch/Jaro.html#M000046","()","          Returns whether case is ignored when computing matching characters.    ",2],["ignore_case","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000053","()","          Returns whether case is ignored when computing matching characters.    ",2],["ignore_case=","Amatch::Jaro","classes/Amatch/Jaro.html#M000047","(p1)","          Sets whether case is ignored when computing matching characters.    ",2],["ignore_case=","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000054","(p1)","          Sets whether case is ignored when computing matching characters.    ",2],["insertion","Amatch::Sellers","classes/Amatch/Sellers.html#M000014","()","          Returns the weight of the insertion operation, that is used to compute    the Sellers distance.",2],["insertion=","Amatch::Sellers","classes/Amatch/Sellers.html#M000015","(p1)","          Sets the weight of the insertion operation, that is used to compute    the Sellers distance,",2],["jaro_similar","Amatch::StringMethods","classes/Amatch/StringMethods.html#M000049","(p1)","          If called on a String, this string is used as a    Amatch::Jaro#pattern to match against <code>strings</code>.",2],["jarowinkler_similar","Amatch::StringMethods","classes/Amatch/StringMethods.html#M000058","(p1)","          If called on a String, this string is used as a    Amatch::JaroWinkler#pattern to match against",2],["levenshtein_similar","Amatch::StringMethods","classes/Amatch/StringMethods.html#M000006","(p1)","          If called on a String, this string is used as a Amatch::Levenshtein#pattern    to match against",2],["longest_subsequence_similar","Amatch::StringMethods","classes/Amatch/StringMethods.html#M000036","(p1)","          If called on a String, this string is used as a    Amatch::LongestSubsequence#pattern to match",2],["longest_substring_similar","Amatch::StringMethods","classes/Amatch/StringMethods.html#M000042","(p1)","          If called on a String, this string is used as a    Amatch::LongestSubstring#pattern to match",2],["match","Amatch::Hamming","classes/Amatch/Hamming.html#M000023","(p1)","          Uses this Amatch::Hamming instance to match Amatch::Hamming#pattern against    <code>strings</code>,",2],["match","Amatch::Jaro","classes/Amatch/Jaro.html#M000048","(p1)","          Uses this Amatch::Jaro instance to match    Jaro#pattern against <code>strings</code>, that",2],["match","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000057","(p1)","          Uses this Amatch::Jaro instance to match    Jaro#pattern against <code>strings</code>, that",2],["match","Amatch::Levenshtein","classes/Amatch/Levenshtein.html#M000003","(p1)","          Uses this Amatch::Levenshtein instance to match Amatch::Levenshtein#pattern    against <code>strings</code>.",2],["match","Amatch::LongestSubsequence","classes/Amatch/LongestSubsequence.html#M000034","(p1)","          Uses this Amatch::LongestSubsequence instance to match    LongestSubsequence#pattern against",2],["match","Amatch::LongestSubstring","classes/Amatch/LongestSubstring.html#M000040","(p1)","          Uses this Amatch::LongestSubstring instance to match    LongestSubstring#pattern against <code>strings</code>,",2],["match","Amatch::PairDistance","classes/Amatch/PairDistance.html#M000029","(...)","          Uses this Amatch::PairDistance instance to match  PairDistance#pattern against    <code>strings</code>.",2],["match","Amatch::Sellers","classes/Amatch/Sellers.html#M000017","(p1)","          Uses this Amatch::Sellers instance to match Sellers#pattern against    <code>strings</code>,",2],["new","Amatch::Hamming","classes/Amatch/Hamming.html#M000020","(p1)","          Creates a new Amatch::Hamming instance from <code>pattern</code>.     ",2],["new","Amatch::Jaro","classes/Amatch/Jaro.html#M000043","(p1)","          Creates a new Amatch::Jaro instance from <code>pattern</code>.     ",2],["new","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000050","(p1)","          Creates a new Amatch::JaroWinkler instance from <code>pattern</code>.     ",2],["new","Amatch::Levenshtein","classes/Amatch/Levenshtein.html#M000000","(p1)","          Creates a new Amatch::Levenshtein instance from <code>pattern</code>.     ",2],["new","Amatch::LongestSubsequence","classes/Amatch/LongestSubsequence.html#M000031","(p1)","          Creates a new Amatch::LongestSubsequence instance from <code>pattern</code>.     ",2],["new","Amatch::LongestSubstring","classes/Amatch/LongestSubstring.html#M000037","(p1)","          Creates a new Amatch::LongestSubstring instance from <code>pattern</code>.     ",2],["new","Amatch::PairDistance","classes/Amatch/PairDistance.html#M000026","(p1)","          Creates a new Amatch::PairDistance instance from <code>pattern</code>.     ",2],["new","Amatch::Sellers","classes/Amatch/Sellers.html#M000007","(p1)","          Creates a new Amatch::Sellers instance from <code>pattern</code>,    with all weights initially",2],["pair_distance_similar","Amatch::StringMethods","classes/Amatch/StringMethods.html#M000030","(...)","          If called on a String, this string is used as a Amatch::PairDistance#pattern    to match against",2],["pattern","Amatch::Hamming","classes/Amatch/Hamming.html#M000021","()","          Returns the current pattern string of this instance.    ",2],["pattern","Amatch::Jaro","classes/Amatch/Jaro.html#M000044","()","          Returns the current pattern string of this instance.    ",2],["pattern","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000051","()","          Returns the current pattern string of this instance.    ",2],["pattern","Amatch::Levenshtein","classes/Amatch/Levenshtein.html#M000001","()","          Returns the current pattern string of this instance.    ",2],["pattern","Amatch::LongestSubsequence","classes/Amatch/LongestSubsequence.html#M000032","()","          Returns the current pattern string of this instance.    ",2],["pattern","Amatch::LongestSubstring","classes/Amatch/LongestSubstring.html#M000038","()","          Returns the current pattern string of this instance.    ",2],["pattern","Amatch::PairDistance","classes/Amatch/PairDistance.html#M000027","()","          Returns the current pattern string of this instance.    ",2],["pattern","Amatch::Sellers","classes/Amatch/Sellers.html#M000008","()","          Returns the current pattern string of this instance.    ",2],["pattern=","Amatch::Hamming","classes/Amatch/Hamming.html#M000022","(p1)","          Sets the current pattern string of this instance to <code>pattern</code>.    ",2],["pattern=","Amatch::Jaro","classes/Amatch/Jaro.html#M000045","(p1)","          Sets the current pattern string of this instance to <code>pattern</code>.    ",2],["pattern=","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000052","(p1)","          Sets the current pattern string of this instance to <code>pattern</code>.    ",2],["pattern=","Amatch::Levenshtein","classes/Amatch/Levenshtein.html#M000002","(p1)","          Sets the current pattern string of this instance to <code>pattern</code>.    ",2],["pattern=","Amatch::LongestSubsequence","classes/Amatch/LongestSubsequence.html#M000033","(p1)","          Sets the current pattern string of this instance to <code>pattern</code>.    ",2],["pattern=","Amatch::LongestSubstring","classes/Amatch/LongestSubstring.html#M000039","(p1)","          Sets the current pattern string of this instance to <code>pattern</code>.    ",2],["pattern=","Amatch::PairDistance","classes/Amatch/PairDistance.html#M000028","(p1)","          Sets the current pattern string of this instance to <code>pattern</code>.    ",2],["pattern=","Amatch::Sellers","classes/Amatch/Sellers.html#M000009","(p1)","          Sets the current pattern string of this instance to <code>pattern</code>.    ",2],["reset_weights","Amatch::Sellers","classes/Amatch/Sellers.html#M000016","()","      Resets all weights (substitution, deletion, and insertion) to 1.0.     ",2],["scaling_factor","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000055","()","          The scaling factor is how much weight to give common prefixes.    Default is 0.1.    ",2],["scaling_factor=","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000056","(p1)","          Sets the weight to give common prefixes.    ",2],["search","Amatch::Levenshtein","classes/Amatch/Levenshtein.html#M000004","(p1)","          searches Amatch::Levenshtein#pattern in <code>strings</code> and returns the    edit distance",2],["search","Amatch::Sellers","classes/Amatch/Sellers.html#M000018","(p1)","          searches Sellers#pattern in <code>strings</code> and returns the edit    distance (the sum",2],["similar","Amatch::Hamming","classes/Amatch/Hamming.html#M000024","(p1)","          Uses this Amatch::Hamming instance to match  Amatch::Hamming#pattern against    <code>strings</code>,",2],["similar","Amatch::Jaro","classes/Amatch/Jaro.html#M000060","(p1)","Alias for #match",2],["similar","Amatch::JaroWinkler","classes/Amatch/JaroWinkler.html#M000061","(p1)","Alias for #match",2],["similar","Amatch::Levenshtein","classes/Amatch/Levenshtein.html#M000005","(p1)","          Uses this Amatch::Levenshtein instance to match  Amatch::Levenshtein#pattern    against <code>strings</code>,",2],["similar","Amatch::LongestSubsequence","classes/Amatch/LongestSubsequence.html#M000035","(p1)","          Uses this Amatch::LongestSubsequence instance to match    Amatch::LongestSubsequence#pattern",2],["similar","Amatch::LongestSubstring","classes/Amatch/LongestSubstring.html#M000041","(p1)","          Uses this Amatch::LongestSubstring instance to match    Amatch::LongestSubstring#pattern against",2],["similar","Amatch::PairDistance","classes/Amatch/PairDistance.html#M000059","(...)","Alias for #match",2],["similar","Amatch::Sellers","classes/Amatch/Sellers.html#M000019","(p1)","          Uses this Amatch::Sellers instance to match Amatch::Sellers#pattern    against <code>strings</code>",2],["substitution","Amatch::Sellers","classes/Amatch/Sellers.html#M000010","()","          Returns the weight of the substitution operation, that is used to compute    the Sellers distance.",2],["substitution=","Amatch::Sellers","classes/Amatch/Sellers.html#M000011","(p1)","          Sets the weight of the substitution operation, that is used to compute    the Sellers distance,",2],["README.rdoc","files/README_rdoc.html","files/README_rdoc.html","","= amatch - Approximate Matching Extension for Ruby  == Description  This is a collection of classes that",3],["amatch_ext.c","files/ext/amatch_ext_c.html","files/ext/amatch_ext_c.html","","",3],["pair.c","files/ext/pair_c.html","files/ext/pair_c.html","","",3],["amatch.rb","files/lib/amatch_rb.html","files/lib/amatch_rb.html","","",3],["polite.rb","files/lib/amatch/polite_rb.html","files/lib/amatch/polite_rb.html","","",3],["rude.rb","files/lib/amatch/rude_rb.html","files/lib/amatch/rude_rb.html","","",3],["version.rb","files/lib/amatch/version_rb.html","files/lib/amatch/version_rb.html","","",3]]}}